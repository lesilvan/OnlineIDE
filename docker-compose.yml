version: "3.8"

networks:
  online-ide:
    driver: bridge
  online-ide-database:
    driver: bridge

volumes:
  projectsdata:

services:
  discovery:
    image: discovery-service:latest
    restart: on-failure
    networks:
      - online-ide
    environment:
      - EUREKA_PORT=${EUREKA_PORT}
    ports:
      - "${EUREKA_PORT}:${EUREKA_PORT}"

  gateway:
    image: gateway-service:latest
    restart: on-failure
    environment:
      - EUREKA
    networks:
      - online-ide
    environment:
      - EUREKA_SERVER=${EUREKA_SERVER}
    ports:
      - "80:8000"

  postgresdb:
    image: postgres:latest
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - "projectsdata:/var/lib/postgresql/data"
    restart: on-failure
    networks:
      - online-ide-database

  compiler:
    image: compiler-service:latest
    restart: on-failure
    networks:
      - online-ide
    environment:
      - EUREKA_SERVER=${EUREKA_SERVER}

  darkmode:
    image: darkmode-service:latest
    restart: on-failure
    networks:
      - online-ide
    environment:
      - EUREKA_SERVER=${EUREKA_SERVER}
    ports:
      - "8083:8083"

  project:
    image: project-service:latest
    restart: on-failure
    networks:
      - online-ide
      - online-ide-database
    environment:
      - POSTGRES_URL=postgresdb   # must be same name as postgresdb-service
      - POSTGRES_PORT=5432        # use default postgres port
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    environment:
      - EUREKA_SERVER=${EUREKA_SERVER}

  ui:
    image: ui-service:latest
    restart: on-failure
    networks:
      - online-ide
    ports:
      - "8080:8080"
    environment:
      - EUREKA_SERVER=${EUREKA_SERVER}
