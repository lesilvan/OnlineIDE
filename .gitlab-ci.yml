# hidden yaml configuration to only run pipelines when according source directory has been modified
.compiler-rules: &compiler-changes
  only:
    changes:
      - compiler/**/*

.darkmode-rules: &darkmode-changes
  only:
    changes:
      - dark-mode/**/*

.project-rules: &project-changes
  only:
    changes:
      - project/**/*

.gateway-rules: &gateway-changes
  only:
    changes:
      - gateway/**/*

.ui-rules: &ui-changes
  only:
    changes:
      - ui/**/*

.discovery-rules: &discovery-changes
  rules:
    - changes:
      - discoveryserver/*
stages:
  - build
  - test
  - package
  - publish

# login to private docker registry
before_script:
  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY

# building all services as docker images
compiler-publish:
  stage: publish
  script:
    - docker build --pull -t $CI_REGISTRY/ase20-group1-2/ase20-practical-exercise/compiler-service:latest ./compiler/
    - docker push $CI_REGISTRY/ase20-group1-2/ase20-practical-exercise/compiler-service:latest
  <<: *compiler-changes

darkmode-publish:
  stage: publish
  script:
    - docker build --pull -t $CI_REGISTRY/ase20-group1-2/ase20-practical-exercise/darkmode-service:latest ./dark-mode/
    - docker push $CI_REGISTRY/ase20-group1-2/ase20-practical-exercise/darkmode-service:latest
  <<: *darkmode-changes

project-publish:
  stage: publish
  script:
    - docker build --pull -t $CI_REGISTRY/ase20-group1-2/ase20-practical-exercise/project-service:latest ./project/
    - docker push $CI_REGISTRY/ase20-group1-2/ase20-practical-exercise/project-service:latest
  <<: *project-changes

gateway-publish:
  stage: publish
  script:
    - docker build --pull -t $CI_REGISTRY/ase20-group1-2/ase20-practical-exercise/gateway-service:latest ./gateway/
    - docker push $CI_REGISTRY/ase20-group1-2/ase20-practical-exercise/gateway-service:latest
  <<: *gateway-changes

ui-publish:
  stage: publish
  script:
    - docker build --pull -t $CI_REGISTRY/ase20-group1-2/ase20-practical-exercise/ui-service:latest ./ui/
    - docker push $CI_REGISTRY/ase20-group1-2/ase20-practical-exercise/ui-service:latest
  <<: *ui-changes

discovery-publish:
  stage: publish
  script:
    - docker build --pull -t $CI_REGISTRY/ase20-group1-2/ase20-practical-exercise/discovery-service:latest ./discoveryserver/
    - docker push $CI_REGISTRY/ase20-group1-2/ase20-practical-exercise/discovery-service:latest
  <<: *discovery-changes

compiler-build:
  stage: build
  script:
    - cd compiler
    - mvn clean compile
  <<: *compiler-changes

darkmode-build:
  stage: build
  script:
    - cd dark-mode
    - mvn clean compile
  <<: *darkmode-changes

project-build:
  stage: build
  script:
    - cd project
    - mvn clean compile
  <<: *project-changes

gateway-build:
  stage: build
  script:
    - cd gateway
    - mvn clean compile
  <<: *gateway-changes

ui-build:
  stage: build
  script:
    - cd ui
    - mvn clean compile
  artifacts:
    paths:
      - ui/target/
  <<: *ui-changes

discovery-build:
  stage: build
  script:
    - cd discoveryserver
    - mvn clean compile
  <<: *discovery-changes

compiler-test:
  stage: test
  script:
    - cd compiler
    - mvn test
  <<: *compiler-changes

compiler-package:
  stage: package
  variables:
    MAVEN_OPTS: "-DskipTests=true"
  script:
    - cd compiler
    - mvn package
  <<: *compiler-changes

darkmode-package:
  stage: package
  variables:
    MAVEN_OPTS: "-DskipTests=true"
  script:
    - cd dark-mode
    - mvn package
  <<: *darkmode-changes

project-package:
  stage: package
  variables:
    MAVEN_OPTS: "-DskipTests=true"
  script:
    - cd project
    - mvn package
  <<: *project-changes

gateway-package:
  stage: package
  variables:
    MAVEN_OPTS: "-DskipTests=true"
  script:
    - cd gateway
    - mvn package
  <<: *gateway-changes

ui-package:
  stage: package
  variables:
    MAVEN_OPTS: "-DskipTests=true"
  script:
    - cd ui
    - mvn package
  artifacts:
    paths:
      - ui/target/*.jar
  <<: *ui-changes

discovery-package:
  stage: package
  variables:
    MAVEN_OPTS: "-DskipTests=true"
  script:
    - cd discoveryserver
    - mvn package
  <<: *discovery-changes
