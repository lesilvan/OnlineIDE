# hidden yaml configuration to only run pipelines when according source directory has been modified
.compiler-rules: &compiler-changes
  rules:
    - changes:
      - compiler/*

.darkmode-rules: &darkmode-changes
  rules:
    - changes:
      - dark-mode/*

.project-rules: &project-changes
  rules:
    - changes:
      - project/*

stages:
  - build
  - test
  - package
  - publish

# login to private docker registry
before_script:
  - docker login -u $CI_USER -p $CI_ACCESS_TOKEN $CI_REGISTRY

# building all services as docker images
compiler-publish:
  stage: docker
  script:
    - docker build --pull -t $CI_REGISTRY/ase20-group1-2/ase20-practical-exercise/compiler-service:latest ./compiler/
    - docker push $CI_REGISTRY/ase20-group1-2/ase20-practical-exercise/compiler-service:latest
  <<: *compiler-changes

darkmode-publish:
  stage: docker
  script:
    - docker build --pull -t $CI_REGISTRY/ase20-group1-2/ase20-practical-exercise/compiler-service:latest ./dark-mode/
    - docker push $CI_REGISTRY/ase20-group1-2/ase20-practical-exercise/darkmode-service:latest
  <<: *darkmode-changes

project-publish:
  stage: docker
  script:
    - docker build --pull -t $CI_REGISTRY/ase20-group1-2/ase20-practical-exercise/compiler-service:latest ./project/
    - docker push $CI_REGISTRY/ase20-group1-2/ase20-practical-exercise/project-service:latest
  <<: *project-changes

compiler-build:
  stage: build
  script:
    - cd compiler
    - mvn clean compile
  <<: *compiler-changes

darkmode-build:
  stage: build
  script:
    - cd dark-mode
    - mvn clean compile
  <<: *darkmode-changes

project-build:
  stage: build
  script:
    - cd project
    - mvn clean compile
  <<: *project-changes

compiler-test:
  stage: test
  script:
    - cd compiler
    - mvn test
  <<: *compiler-changes

compiler-package:
  stage: package
  variables:
    MAVEN_OPTS: "-DskipTests=true"
  script:
    - cd compiler
    - mvn package
  <<: *compiler-changes

darkmode-package:
  stage: package
  variables:
    MAVEN_OPTS: "-DskipTests=true"
  script:
    - cd dark-mode
    - mvn package
  <<: *darkmode-changes

project-package:
  stage: package
  variables:
    MAVEN_OPTS: "-DskipTests=true"
  script:
    - cd project
    - mvn package
  <<: *project-changes
